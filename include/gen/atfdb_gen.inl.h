//
// include/gen/atfdb_gen.inl.h
// Generated by AMC
//
// (C) AlgoEngineering LLC 2008-2013
// (C) NYSE | Intercontinental Exchange 2013-2016
//


#pragma once
#include "include/gen/algo_gen.inl.h"
//#pragma endinclude
inline atfdb::Amctest::Amctest() {
}

inline atfdb::FieldId::FieldId(i32                            in_value)
    : value(in_value)
{
}
inline atfdb::FieldId::FieldId(atfdb_FieldIdEnum arg) { this->value = i32(arg); }
inline atfdb::FieldId::FieldId() {
    atfdb::FieldId_Init(*this);
}


// --- atfdb.FieldId.value.GetEnum
// Get value of field as enum type
inline atfdb_FieldIdEnum atfdb::value_GetEnum(const atfdb::FieldId& parent) {
    return atfdb_FieldIdEnum(parent.value);
}

// --- atfdb.FieldId.value.SetEnum
// Set value of field from enum type.
inline void atfdb::value_SetEnum(atfdb::FieldId& parent, atfdb_FieldIdEnum rhs) {
    parent.value = i32(rhs);
}

// --- atfdb.FieldId.value.Cast
inline atfdb::FieldId::operator atfdb_FieldIdEnum () const {
    return atfdb_FieldIdEnum((*this).value);
}

// --- atfdb.FieldId..Init
// Set all fields to initial values.
inline void atfdb::FieldId_Init(atfdb::FieldId& parent) {
    parent.value = i32(-1);
}
inline atfdb::Normcheck::Normcheck() {
}

inline atfdb::Unittest::Unittest() {
}


inline algo::cstring &algo::operator <<(algo::cstring &str, const atfdb::FieldId &row) {// cfmt:atfdb.FieldId.String
    atfdb::FieldId_Print(const_cast<atfdb::FieldId&>(row), str);
    return str;
}
