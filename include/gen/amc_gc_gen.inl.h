//
// include/gen/amc_gc_gen.inl.h
// Generated by AMC
//
// (C) AlgoEngineering LLC 2008-2013
// (C) NYSE | Intercontinental Exchange 2013-2016
//


#pragma once
#include "include/gen/algo_gen.inl.h"
#include "include/gen/command_gen.inl.h"
//#pragma endinclude
inline amc_gc::Acr::Acr() {
    amc_gc::Acr_Init(*this);
}

inline amc_gc::Acr::~Acr() {
    amc_gc::Acr_Uninit(*this);
}


// --- amc_gc.Acr..Init
// Set all fields to initial values.
inline void amc_gc::Acr_Init(amc_gc::Acr& parent) {
    parent.acr_path = algo::strptr("bin/acr");
    parent.acr_pid = pid_t(0);
    parent.acr_timeout = i32(0);
    parent.acr_status = i32(0);
}
inline amc_gc::Check::Check() {
    amc_gc::Check_Init(*this);
}

inline amc_gc::Check::~Check() {
    amc_gc::Check_Uninit(*this);
}

inline amc_gc::trace::trace() {
}

inline amc_gc::FieldId::FieldId(i32                            in_value)
    : value(in_value)
{
}
inline amc_gc::FieldId::FieldId(amc_gc_FieldIdEnum arg) { this->value = i32(arg); }
inline amc_gc::FieldId::FieldId() {
    amc_gc::FieldId_Init(*this);
}


// --- amc_gc.FieldId.value.GetEnum
// Get value of field as enum type
inline amc_gc_FieldIdEnum amc_gc::value_GetEnum(const amc_gc::FieldId& parent) {
    return amc_gc_FieldIdEnum(parent.value);
}

// --- amc_gc.FieldId.value.SetEnum
// Set value of field from enum type.
inline void amc_gc::value_SetEnum(amc_gc::FieldId& parent, amc_gc_FieldIdEnum rhs) {
    parent.value = i32(rhs);
}

// --- amc_gc.FieldId.value.Cast
inline amc_gc::FieldId::operator amc_gc_FieldIdEnum () const {
    return amc_gc_FieldIdEnum((*this).value);
}

// --- amc_gc.FieldId..Init
// Set all fields to initial values.
inline void amc_gc::FieldId_Init(amc_gc::FieldId& parent) {
    parent.value = i32(-1);
}

inline algo::cstring &algo::operator <<(algo::cstring &str, const amc_gc::trace &row) {// cfmt:amc_gc.trace.String
    amc_gc::trace_Print(const_cast<amc_gc::trace&>(row), str);
    return str;
}

inline algo::cstring &algo::operator <<(algo::cstring &str, const amc_gc::FieldId &row) {// cfmt:amc_gc.FieldId.String
    amc_gc::FieldId_Print(const_cast<amc_gc::FieldId&>(row), str);
    return str;
}
