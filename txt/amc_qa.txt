Q: What is AMC?

A: AMC is Algo Model Compiler, a tool for converting
a relational data model, specified using a set of relational tables,
to source code implementing high-performance in-memory database
primitives.

The premise of AMC is that reusable code doesn't work, because of two things:
 - layers of glue and cruft that get added to accomodate the possible use scenarios
 - eventual loss of either compatibility or flexibility and abandonment
As a result, all high-performance systems are hand-coded due to highly
specific requirements. AMC solves this dilemma.
Since it generates readable source code that we then keep the result under source
control, we can control the changes tightly.
Since the performance of AMC itself is irrelevant (it generates 1M+ lines of code
per second, which is good enough for all purposes), we can keep backward 
compatibility at the cost of slightly lower performance.
AMC allows customization, down to
bitfield-level, of the memory layout of all attributes.
Best-in-class algorithms for most day-to-day
problems are known. The problem is supplying them to the application
without losing the performance to glue code and data format
mismatch. Since AMC generates a custom set of
routines for each application, it can be tuned without fear
of adversely affecting other users.

Q: What does AMC automate?

A: AMC starts with a data model, expressed
as a set of relational tables, and generates hash tables, arrays,
linked lists, dequeues, binary heaps, and tree structures. AMC
generates hierarchical, region-based memory allocators, including
free-list, fifo, best-fit, linear array, indirect array. The resulting
code is compiled into a library, a ``database of source code'',
containing a superset of functions that will be used by the final
application. AMC does not modify or reverse-engineer user code. The
application developer uses generated code as a library.

The killer feature of AMC is that it generates xrefs -- automatic joins between
in-memory structures, eliminating hard-to-find pointer errors and
leaving the developer to focus on the application, not pointer
management.

Studies estimate the defect rate to grow as an exponential function of
number of source lines. The ratio of manual to AMC-generated code for
a typical application is 1 to 20, significantly lowering the number of
potential bugs. The code AMC generates is also the kind that is the
most time-consuming and error-prone to write.

Q: How does AMC workflow help the organization and shorten the time to
market?

A: An AMC data model provides the foundation for all steps in
the system life cycle, from specification, development and design, to
coding, test, documentation, reports and subsequent maintenance
process. It unifies, simplifies, and guarantees the continuity and
quality of all these steps.

The AMC data model is a focal point where the developer, software
architect, and the business analyst can meet. The relational,
auto-cross-referenced description of the data model is expressed using
tables and domain-specified terms. AMC uses the data model to generate
in-memory database code, documentation, tests, and reports.
